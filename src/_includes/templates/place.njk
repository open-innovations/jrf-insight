---
layout: ./page.njk
tags:
  - place
---
{% from 'macro/place.njk' import top_trump_table, place_data_table %}

{#- Set some useful local data -#}
{%- set facts = places.placeData(key) -%}
This code is setting up some local data and variables for the page.
{%- if relations.children or [] | length > 0 -%}
  {%- set facts_map = places.getFactsForPlaces(relations.children) -%}
{%- else %}
  {%- set facts_map = [facts] -%}
{%- endif -%}
{%- set all_places = [ relations.ancestors | reverse, key, relations.children ] | flatten -%}
{%- set facts_table = places.getFactsForPlaces(all_places) -%}

<p>
Place page for {{ title }} ({{ key | ons_code_to_type }}).
</p>

{# Remove incomplete tables
{% include 'partials/place/tables.njk' %}
#}

{{ comp.nav_block({
  place_key: key,
  parents: relations.parents,
  ancestors: relations.ancestors,
  children: relations.children,
  dir: {
    spotlight: true
  }
}) | safe }}

{% comp 'layout.tab.set' %}
{% comp 'layout.tab.new_panel', {
  label: 'Population',
  id: 'Population'
} %}
<h3>Population estimates for {{ title }}</h3>
{% comp 'collapse', {heading: "What's on this chart?"} %}
<p>This chart shows place-based statistics for {{ title }}. The map is coloured by population. Hover on the map for more detailed information.</p>
{% endcomp %}

{% set max_population = facts_map | getattr('population') | max | round(-3, 'ceiling') %}
{% set min_population = facts_map | getattr('population') | min | round(-3, 'floor') %}
{% set half_population = (max_population - min_population) / 2 + min_population %}

{% if place[key].map %}
  {% comp 'layout.wrapper', {width: 'max(20em, 70%)'} %}
  {{ comp.oi.map.svg({
            config: {
              data: facts_map,
              geojson: {
                data: place[key].map,
                key: 'ons_code'
              },
              background: {
                geojson: 'map.england', colour: 'silver'
              },
              columns: [
                {
                  name: 'tooltip', 
                  template: '{{ name }}
                              Population: {{ population | toLocaleString() }}
                              No. of Households: {{ number_of_households | toLocaleString() }}
                              GVA (£m): {{ gva | toLocaleString() }}
                              Population density (per square km): {{ population_density | toFixed(0) | toLocaleString() }}
                              <a href="../{{ geography_code }}/">Visit place page</a>'
                }],
              key: "geography_code",
              value: "population",
              scale: "Viridis",
              min: 0,
              padding: 50,
              max: max_population,
              tooltip: "tooltip",
              legend:
              {
                position: "top",
                items: [
                  {
                    value: max_population,
                    label: max_population | humanise(decimalPlaces=2)
                  },
                  {
                    value: half_population,
                    label: half_population | humanise(decimalPlaces=2) 
                  },
                  {
                    value: min_population,
                    label: min_population | humanise(decimalPlaces=2)
                  }
                ]
              }
            }
        }
      ) | safe }}
  {% endcomp %}
{% endif %}
{% endcomp %}

{% comp 'layout.tab.panel', { label: 'Place statistics', id: 'place-statistics' } %}
{{ top_trump_table(
        name="Place statistics",
        style="top-trump-table",
        columns=[
            {
              name: 'Population estimate',
              data: facts.population | localise, 
              simple_data: null
            },
            {
              name: "Number of households",
              data: facts.number_of_households | localise,
              simple_data: null
            },
            {
              name: "Population density",
              data: facts.population_density | round(0) | localise + ' people per sq. km',
              simple_data: null
            },
            {
              name: "GVA",
              data: "£" + ( facts.gva | localise ) + "m",
              simple_data: null
            },
            {
              name: 'Area', 
              data: facts.area | round(0) | localise + ' sq. km', 
              simple_data: null
            }
            ]
        ) 
    }}
{% endcomp %}
{% comp 'layout.tab.panel', { label: 'Poverty statistics', id: 'poverty-statistics' } %}
{{ top_trump_table(
    name="Poverty statistics",
    style="top-trump-table top-trump-invert",
    columns= [
        {
          name: 'People in low income households',
          data: facts.total_low_income | localise,
          simple_data: facts.ratio_people_in_low_income
        },
        {
          name: 'Unemployment',
          data: facts.unemployment_rate_16_64 | round(1) | localise + "%",
          simple_data: facts.ratio_unemployment_16_64
        },
        {
          name: 'Economic Inactivity',
          data: facts.economic_inactivity_16_64 | round(1) | localise + "%",
          simple_data: facts.ratio_economically_inactive
        },
        {
          name: 'Children in low income households',
          data: facts.children_in_low_income,
          simple_data: ratio_children_in_low_income
        },
        {
          name: 'IMD average score',
          data: facts.imd_average_score,
          simple_data: null
        },
        {
          name: 'IMD for children',
          data: facts.imd_children,
          simple_data: null
        },
        {
          name: 'IMD for older people',
          data: facts.imd_older_people,
          simple_data: null
        }
        ]
      ) 
    }}
{% endcomp %}
{# end of tab set #}
{% endcomp %}

<h3>Data Tables</h3>
{{ place_data_table(
  places=facts_table,
  here=key,
  columns={
    'Population estimate': 'population',
    'Number of households': 'number_of_households',
    'GVA (£m)': 'gva',
    'Population density': 'population_density',
    'Area in sq km': 'area'
  }
) }}

{{ place_data_table(
  places=facts_table,
  here=key,
  columns={
    'Children in poverty': 'children_in_low_income',
    'Number of children': 'number_of_children',
    'IMD average score': 'imd_average_score',
    'IMD - children': 'imd_children',
    'IMD - older people': 'imd_older_people',
    'Number of people living in low-income households': 'total_low_income',
    'Unemployment rate aged 16-64 (%)': 'unemployment_rate_16_64',
    'Economically inactive (%)': 'economic_inactivity_16_64'
  }
) }}