---
layout: ./page.njk
tags:
  - place
---
{% set this_place_data = query.getDataForPlace(key) %}

{% if (place[key].relations.children | length) > 0 %}
  {% set place_data = query.getPlaceData(place[key].relations.children) %}
{% else %}
  {% set place_data = [this_place_data] %}
{% endif %}

<p>
Place page for {{ title }} ({{ comp.place.type({ id: key }) }}).
</p>

{% set population = this_place_data['Number of persons'] %}
{% set area = this_place_data['Area in sq km'] | round(-1) %}
{% set population_density = (this_place_data['Number of persons'] / this_place_data['Area in sq km']) | round(0) %}

{% set ratio_people_in_low_income = (this_place_data['percent_in_low_income']/100) %}
{% set ratio_unemployment_16_64 = (this_place_data['unemployment_rate_16_64'] / 100) %}
{% set ratio_economically_inactive = (this_place_data['economic_inactivity_16_64'] / 100) %}
{% set ratio_children_in_low_income = (this_place_data['children_in_low_income'] / this_place_data['number_of_children']) %}
{# {% comp 'layout.two_column' %}
{% comp 'layout.stack' %}
{{ comp.info.headline({
      number: population,
      display: population,
      description: 'The population of ' + title + ' is <span data-number=' + population + '>.'
    }) | safe }}

{{ comp.info.headline({
      number: population_density,
      display: population_density + ' population per square km',
      description: 'POPULATION DENSITY'
    }) | safe }}

{{ comp.info.headline({
      number: 'NA',
      display: 'NA',
      description: 'URBAN VS RURAL'
    }) | safe }}

{{ comp.info.headline({
      number: 'NA',
      display: 'NA',
      description: 'EMPLOYMENT'
    }) | safe }}

{{ comp.info.headline({
      number: 'NA',
      display: 'NA',
      description: 'HOUSEHOLD INCOME - GDHI'
    }) | safe }}

{% endcomp %}

{% comp 'layout.stack' %}
{{ comp.info.headline({
      number: 0,
      display: 0,
      description: 'CHILD POVERTY (FROM LOUGHBOROUGH)'
    }) | safe }}

{{ comp.info.headline({
      number: this_place_data['imd_older_people'],
      display: this_place_data['imd_older_people'],
      description: 'IMD - OLDER PEOPLE (OR MAYBE PENSION CREDIT)'
    }) | safe }}

{{ comp.info.headline({
      number: 0,
      display: 0,
      description: 'IMD - OVERALL'
    }) | safe }}

{{ comp.info.headline({
      number: 'NA',
      display: 'NA',
      description: 'PROPORTION BELOW / ABOVE LIVING WAGE'
    }) | safe }}

{{ comp.info.headline({
      number: 0,
      display: 0,
      description: 'PHE FINGERTIPS / ONS LONG TERM CONDITIONS'
    }) | safe }}

{{ comp.info.headline({
      number: 0,
      display: 0,
      description: 'LONELINESS AND SOCIAL ISOLATION'
    }) | safe }}

{% endcomp %}
{% endcomp %} #}

{# {% if this_place_data['children_in_low_income'] %}
  {% comp 'grid.block', {classes: 'headline'} %}
  {% set proportion = this_place_data['children_in_low_income'] / this_place_data['number_of_children'] %}
  <p class="big-number">
    {{ comp.nearly.ratio({ value: proportion }) }}
  </p>
  <p>
  In {{ title}}, {{ comp.nearly.ratio({ value: proportion, withDirection: true }) }}
  ({{ comp.nearly.percentage({ value: proportion }) }}) of children live in poverty.
</p>
  {% endcomp %}
{% endif %} #}

{{ comp.nav_block({
  place_key: key,
  parents: place[key].relations.parents,
  ancestors: place[key].relations.ancestors,
  children: place[key].relations.children,
  dir: {
    spotlight: true
  }
}) | safe }}

{% set max_population = place_data | getattr('Number of persons') | max | round(-3, 'ceiling') %}
{% set min_population = place_data | getattr('Number of persons') | min | round(-3, 'floor') %}
{% set half_population = (max_population - min_population) / 2 + min_population %}

{% if place[key].map %}
  {{ comp.oi.map.zoomable({
        config: {
          data: place_data,
          geojson: 
          {
            data: place[key].map,
            key: 'ons_code'
          },
          columns: [{
            name: "label",
            template: labels.place
          }],
          key: "geography_code",
          value: "Number of persons",
          scale: "Viridis",
          min: 0,
          max: max_population,
          tooltip: "label",
          legend:
          {
            position: "top right",
            items: [
              {
                value: max_population,
                label: max_population
              },
              {
                value: half_population,
                label: half_population
              },
              {
                value: min_population,
                label: min_population
              }
            ]
          }
        }
    }
  ) | safe }}
{% endif %}

{% set all_places = [
  place[key].relations.ancestors | reverse,
  key,
  place[key].relations.children
] | flatten %}

{% set place_data_all = query.getDataForPlaces(all_places) %}

{% macro place_data_table(places, row_titles, columns, here) %}
  <table class='place-data'>
    <thead>
      <tr>
        <th>Area</th>
        {% for row_title, _ in columns %}
          <th>{{ row_title }}</th>
        {% endfor %}
      </tr>
    </thead>
    <tbody>
      {% for row in places %}
        <tr
          {%- if row['geography_code'] == here %} class='here'{% endif -%}
        >
          <td>
            {%- if row['geography_code'] != here %}
              <a href="/place/{{ row['geography_code'] }}/">
              {% endif -%}
              {{ row['name'] }} ({{ comp.place.type({ id: row['geography_code'] }) }})
            {%- if row['geography_code'] != here %}
              </a>
            {% endif -%}
          </td>
          {% for _, column in columns %}
            <td>{{ (row[column] | round(0)) or '—' }}</td>
          {% endfor %}
        </tr>
      {% endfor %}
    </tbody>
  </table>
{% endmacro %}

{% macro top_trump_table(name, style, columns) %}
  <table class = "{{ style }}">
    <tr>
      <th colspan='3'>{{ title }} - {{ name }}</th>
    </tr>
    {% for item in columns %}
    <tr>
        <td>{{ item.name }}</td>
        {% if item.data %}
          <td>{{ item.data }}
          {% if item.simple_data != null %}
            ({{ comp.nearly.ratio({ value: item.simple_data, withDirection: true }) }})
          {% endif %}
          </td>
        {% else %}
          <td>--</td>
        {% endif %}
    </tr>
    {% endfor %}
  </table>
{% endmacro %}

{{ top_trump_table(
  name="Place statistics",
  style="top-trump-table",
  columns=[
      {
        name: 'Population estimate', 
        data: population, 
        simple_data: null
      },
      {
        name: 'Area (sq km)', 
        data: area, 
        simple_data: null
      },
      {
        name: "Population density (per square km)",
        data: population_density,
        simple_data: null
      },
      {
        name: "Number of households",
        data: this_place_data["Number of households"],
        simple_data: null
      },
      {
        name: "GVA {£m}",
        data: this_place_data["GVA"],
        simple_data: null
      }
      ]
  ) 
}}

{{ top_trump_table(
  name="Poverty statistics",
  style="top-trump-table top-trump-invert",
  columns= [
      {
        name: 'People in low income households', 
        data: this_place_data['total_low_income'], 
        simple_data: ratio_people_in_low_income
      },
      {
        name: 'Unemployment rate',
        data: this_place_data['unemployment_rate_16_64'],
        simple_data: ratio_unemployment_16_64
      },
      {
        name: 'Economically inactive',
        data: this_place_data['economic_inactivity_16_64'],
        simple_data: ratio_economically_inactive
      },
      {
        name: 'Children in low income households',
        data: this_place_data['children_in_low_income'],
        simple_data: ratio_children_in_low_income
      },
      {
        name: 'IMD average score',
        data: this_place_data['imd_average_score'],
        simple_data: null
      },
      {
        name: 'IMD for children',
        data: this_place_data['imd_children'],
        simple_data: null
      },
      {
        name: 'IMD for older people',
        data: this_place_data['imd_older_people'],
        simple_data: null
      }
      ]
  ) 
}}

{{ place_data_table(
  places=place_data_all,
  here=key,
  columns={
    'Population estimate': 'Number of persons',
    'Area in sq km': 'Area in sq km',
    'Number of households': 'Number of households',
    'GVA (£m)': 'GVA',
    'Population density': 'Population density'
  }
) }}

{{ place_data_table(
  places=place_data_all,
  here=key,
  columns={
    'Children in poverty': 'children_in_low_income',
    'Number of children': 'number_of_children',
    'IMD average score': 'imd_average_score',
    'IMD - children': 'imd_children',
    'IMD - older people': 'imd_older_people',
    'Number of people living in low-income households': 'total_low_income',
    'Unemployment rate aged 16-64 (%)': 'unemployment_rate_16_64',
    'Economically inactive (%)': 'economic_inactivity_16_64'
  }
) }}
